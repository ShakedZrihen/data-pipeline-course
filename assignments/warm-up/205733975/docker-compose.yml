version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"

  sqs:
    image: softwaremill/elasticmq:latest
    container_name: sqs
    ports:
      - "9324:9324"
    volumes:
      - ./elasticmq.conf:/opt/elasticmq.conf

  sqs-create:
    image: amazon/aws-cli:latest
    container_name: sqs-create
    links:
      - sqs
    entrypoint: bash
    volumes:
      - .:/project
      - ./create-queues.sh:/create-queues.sh:ro
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=us-west-1
      - AWS_ENDPOINT_URL=http://sqs:9324
    command: "/create-queues.sh"

  scraper:
    build: ./lambda-scraper
    ports:
      - "3001:3001"
    volumes:
      - ./lambda-scraper:/app
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=us-west-1
      - AWS_ENDPOINT_URL=http://sqs:9324
    depends_on:
      - sqs
      - sqs-create

  processor:
    build: ./lambda-processor
    volumes:
      - ./lambda-processor:/app
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=us-west-1
      - AWS_ENDPOINT_URL=http://sqs:9324
    depends_on:
      - sqs
      - sqs-create

  crud:
    build: ./lambda-crud
    ports:
      - "3003:3003"
    volumes:
      - ./lambda-crud:/app
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
    depends_on:
      - postgres
