{
  "/app": {
    "versionSfCore": null,
    "versionFramework": "4.1.19",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeServiceName": null,
    "servicePath": "/app",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "lambda-processor",
      "frameworkVersion": ">3.0.0 || <4.0.0",
      "provider": {
        "name": "aws",
        "runtime": "python3.11"
      },
      "functions": {
        "process": {
          "handler": "handler.process_message",
          "events": [
            {
              "sqs": {
                "arn": {
                  "Fn::GetAtt": [
                    "DataRawQueue",
                    "Arn"
                  ]
                }
              }
            }
          ]
        }
      },
      "resources": {
        "Resources": {
          "DataRawQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "data-raw-q"
            }
          }
        }
      },
      "plugins": [
        "serverless-python-requirements",
        "serverless-offline-sqs",
        "serverless-offline"
      ],
      "custom": {
        "serverless-offline": {
          "httpPort": 3196
        },
        "serverless-offline-sqs": {
          "endpoint": "http://sqs:9324",
          "accessKetId": "x",
          "secretAccessKey": "<REDACTED>"
        },
        "pythonRequirements": {
          "dockerizePip": true
        }
      }
    },
    "serviceRawFile": "service: lambda-processor\nframeworkVersion: \">3.0.0 || <4.0.0\"\nprovider:\n  name: aws\n  runtime: python3.11\n\nfunctions:\n  process:\n    handler: handler.process_message\n    events:\n      - sqs:\n          arn:\n            Fn::GetAtt:\n              - DataRawQueue\n              - Arn\n\nresources:\n  Resources:\n    DataRawQueue:\n      Type: AWS::SQS::Queue\n      Properties:\n        QueueName: data-raw-q\n\nplugins:\n  - serverless-python-requirements\n  - serverless-offline-sqs\n  - serverless-offline\n\ncustom:\n  serverless-offline:\n    httpPort: 3196\n  serverless-offline-sqs:\n    endpoint: http://sqs:9324\n    accessKetId: x\n    secretAccessKey: x\n  pythonRequirements:\n    dockerizePip: true\n",
    "command": [
      "offline",
      "start"
    ],
    "options": {
      "config": "serverless.yml",
      "dockerHost": "host.docker.internal",
      "dockerHostServicePath": "${PWD}",
      "host": "0.0.0.0",
      "noPrependStageInUrl": true,
      "stage": "local"
    },
    "error": {
      "message": "You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".",
      "stack": "Error: You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".\n    at Authentication.getAuthenticatedData (file:///root/.serverless/releases/4.1.19/package/dist/sf-core.js:910:10542)\n    at async Authentication.resolverAuthenticate (file:///root/.serverless/releases/4.1.19/package/dist/sf-core.js:912:20540)\n    at async _Meta.authenticateAndResolve (file:///root/.serverless/releases/4.1.19/package/dist/sf-core.js:920:10814)\n    at async route (file:///root/.serverless/releases/4.1.19/package/dist/sf-core.js:920:16254)\n    at async Object.run2 [as run] (file:///root/.serverless/releases/4.1.19/package/dist/sf-core.js:920:16702)\n    at async run3 (file:///root/.serverless/releases/4.1.19/package/dist/sf-core.js:920:17962)"
    },
    "machineId": "687c4c3f09b8bcc25618ae090aa0c281",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}